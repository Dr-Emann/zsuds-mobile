<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
        xmlns:s="library://ns.adobe.com/flex/spark"
		title="Washers and Dryers" creationComplete="init();"
		viewActivate="onViewActivate();" addedToStage="stage.displayState=StageDisplayState.NORMAL" width="100%" height="100%" opaqueBackground="true">
	<fx:Script> 
		<![CDATA[
		import flash.display.StageDisplayState;
		import flash.desktop.NativeApplication;
		import flash.events.Event;
		import flash.events.IOErrorEvent;
		import flash.events.KeyboardEvent;
		import flash.net.URLLoader;
		import flash.net.URLRequest;
		import flash.system.Capabilities;
		import flash.ui.Keyboard;
		import mx.collections.ArrayList;
		import mx.core.FlexGlobals;
		import mx.events.FlexEvent;
		import net.zdremann.esuds.ClothesMachine;
		import net.zdremann.esuds.ClothesMachineItemRenderer;
		import net.zdremann.esuds.views.RoomChooserView;
		import spark.events.IndexChangeEvent;
		
		[Bindable]
		public var xml:XML;
		
		[Bindable]
		public var machineListData:ArrayList = new ArrayList();
		
		private function init():void
		{
			if(!this.data)
				this.data = [ { header:true, label:"Loading..." } ];
			this.machineListData = new ArrayList(this.data as Array);
			if (!FlexGlobals.topLevelApplication.persistenceManager.getProperty("room"))
			{
				navigator.pushView(SchoolChooserView);
			}
			this.addEventListener(KeyboardEvent.KEY_DOWN, onKeyDown_Handler);
		}
		
		public function onViewActivate():void
		{
			if(FlexGlobals.topLevelApplication.persistenceManager.getProperty("roomName"))
				this.title = FlexGlobals.topLevelApplication.persistenceManager.getProperty("roomName") as String;
			
			if (navigator.poppedViewReturnedObject is Array)
			{
				this.data = navigator.poppedViewReturnedObject;
				this.machineListData = new ArrayList(this.data as Array);
			}
			else 
				refresh();
		}
		
		protected function onKeyDown_Handler(e:KeyboardEvent):void 
		{
			switch(e.keyCode)
			{
			case Keyboard.BACK:
				back();
				break;
			}
		}
		
		public function back():void
		{
			FlexGlobals.topLevelApplication.persistenceManager.save();
			NativeApplication.nativeApplication.exit();
		}
		
		public function refresh():void
		{
			var loader:flash.net.URLLoader = new URLLoader();
			loader.addEventListener(Event.COMPLETE, loaderCompleate_Handler);
			loader.addEventListener(IOErrorEvent.IO_ERROR, onLoadError);
			loader.load(new URLRequest("http://stevenson.esuds.net/RoomStatus/machineStatus.i?bottomLocationId="+FlexGlobals.topLevelApplication.persistenceManager.getProperty("room")));
		}
		
		private function onLoadError(e:IOErrorEvent):void 
		{
			this.data = [ { header:true, label:"A loading error occured" } ];
			this.machineListData = new ArrayList(this.data as Array);
		}
		private function loaderCompleate_Handler(e:flash.events.Event):void
		{
			var prevScrollPos:Number = machineList.dataGroup.verticalScrollPosition;
			var txt:String = e.target.data;
			var reg:RegExp = new RegExp("xmlns=\".*\"");
			txt = txt.replace(reg, "");
			reg = new RegExp("<script.*</script>", "gis");
			txt = txt.replace(reg, "");
			xml = new XML(txt);
			
			var att:XMLList = new XMLList();
			
			var washers:Array = new Array();
			var dryers:Array = new Array();
			
			var machine:ClothesMachine;
			for each(var tr:XML in xml.tr)
			{
				if (tr.attributes().length() != 0 && (tr.attribute("class")=="even" || tr.attribute("class")=="odd"))
				{
					machine = new ClothesMachine();
					// Set machine id
					if (tr.td[0].input.length() == 1)
					{
						machine.id = tr.td[0].input[0].@value;
					}
					//set machine number
					machine.number = tr.td[1].text();
					//set machine status
					if (tr.td[3].font[0].text() == "In Use")
						machine.status = ClothesMachine.IN_USE;
					else if (tr.td[3].font[0].text() == "Available")
						machine.status = ClothesMachine.AVAILABLE;
					else if (tr.td[3].font[0].text() == "Cycle Complete")
						machine.status = ClothesMachine.CYCLE_COMPLETE;
					else if (tr.td[3].font[0].text() == "Unavailable")
						machine.status = ClothesMachine.UNAVAILABLE;
					
				
					// set machine time remaining
					if (tr.td[4].text() != "&nbsp;")
					{
						machine.timeRemaining = tr.td[4].text();
					}
					
					//Set machine type
					if ((tr.td[2].text().toString() as String).indexOf("Washer") != -1)
					{
						machine.type = ClothesMachine.WASHER;
						washers.push(machine);
					}
					else if ((tr.td[2].text().toString() as String).indexOf("Dryer") != -1)
					{
						machine.type = ClothesMachine.DRYER;
						dryers.push(machine);
					}
				}
			}
			// Will now have a list of all washers and dryers
			washers.sortOn(["status", "timeRemaining","number"], Array.NUMERIC);
			dryers.sortOn(["status", "timeRemaining","number"], Array.NUMERIC);
			
			// Combine lists, and add Headers
			var a:Array = new Array();
			if (washers.length > 0)
				a = a.concat( { header:true, label:"Washers" }, washers);
			if (dryers.length > 0)
				a = a.concat( { header:true, label:"Dryers" }, dryers);
			
			this.data = a;
			this.machineListData = new ArrayList(a);
			
			callLater(function ():void { machineList.dataGroup.verticalScrollPosition = prevScrollPos; } );
		}
		
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:viewMenuItems>
		<s:ViewMenuItem label="Change School" click="navigator.pushView(SchoolChooserView);" />
		<s:ViewMenuItem label="Change Room">
			<s:click>
				<![CDATA[
				if (FlexGlobals.topLevelApplication.persistenceManager.getProperty('school'))
					navigator.pushView(RoomChooserView);
				else 
					navigator.pushView(SchoolChooserView);
				]]>
			</s:click>
		</s:ViewMenuItem>
	</s:viewMenuItems>
	<s:navigationContent>
		<s:Button id="changeBtn" label="{(this.width>700)?'Change School':'Change'}">
			<s:click>
			<![CDATA[
			this.navigator.pushView(SchoolChooserView);
			]]>
			</s:click>
		</s:Button>
	</s:navigationContent>
	<s:List id="machineList" dataProvider="{machineListData}"
			itemRenderer="net.zdremann.esuds.ClothesMachineItemRenderer"
			touchInteractionStart="stage.frameRate=60;" touchInteractionEnd="stage.frameRate=10;"
			width="100%" height="100%">
		<s:layout>
			<s:VerticalLayout gap="1" />
		</s:layout>
		<s:change>
			<![CDATA[
			this.navigator.pushView(MachineView, data, machineList.selectedItem);
			]]>
		</s:change>
		<s:changing>
			<![CDATA[
			var evt:IndexChangeEvent = event as IndexChangeEvent;
			if (evt && evt.newIndex>-1)
			{
				var currentItem:* = machineListData.getItemAt(evt.newIndex);
				if (currentItem.hasOwnProperty("header") && currentItem.header == true)
				{
					evt.preventDefault();
				}
			}
			]]>
		</s:changing>
	</s:List>
	
</s:View>